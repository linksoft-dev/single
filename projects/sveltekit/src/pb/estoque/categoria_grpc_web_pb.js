/**
 * @fileoverview gRPC-Web generated client stub for 
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: estoque/categoria.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_api_annotations_pb = require('../google/api/annotations_pb.js')

var google_api_resource_pb = require('../google/api/resource_pb.js')

var plugins_validate_validate_pb = require('../plugins/validate/validate_pb.js')

var plugins_service_service_pb = require('../plugins/service/service_pb.js')

var filter_filter_pb = require('../filter/filter_pb.js')

var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js')
const proto = require('./categoria_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.CategoriaServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.CategoriaServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.CreateCategoriaRequest,
 *   !proto.CreateCategoriaResponse>}
 */
const methodDescriptor_CategoriaService_Create = new grpc.web.MethodDescriptor(
  '/CategoriaService/Create',
  grpc.web.MethodType.UNARY,
  proto.CreateCategoriaRequest,
  proto.CreateCategoriaResponse,
  /**
   * @param {!proto.CreateCategoriaRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.CreateCategoriaResponse.deserializeBinary
);


/**
 * @param {!proto.CreateCategoriaRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.CreateCategoriaResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.CreateCategoriaResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CategoriaServiceClient.prototype.create =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CategoriaService/Create',
      request,
      metadata || {},
      methodDescriptor_CategoriaService_Create,
      callback);
};


/**
 * @param {!proto.CreateCategoriaRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.CreateCategoriaResponse>}
 *     Promise that resolves to the response
 */
proto.CategoriaServicePromiseClient.prototype.create =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CategoriaService/Create',
      request,
      metadata || {},
      methodDescriptor_CategoriaService_Create);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.UpdateCategoriaRequest,
 *   !proto.UpdateCategoriaResponse>}
 */
const methodDescriptor_CategoriaService_Update = new grpc.web.MethodDescriptor(
  '/CategoriaService/Update',
  grpc.web.MethodType.UNARY,
  proto.UpdateCategoriaRequest,
  proto.UpdateCategoriaResponse,
  /**
   * @param {!proto.UpdateCategoriaRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.UpdateCategoriaResponse.deserializeBinary
);


/**
 * @param {!proto.UpdateCategoriaRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.UpdateCategoriaResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.UpdateCategoriaResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CategoriaServiceClient.prototype.update =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CategoriaService/Update',
      request,
      metadata || {},
      methodDescriptor_CategoriaService_Update,
      callback);
};


/**
 * @param {!proto.UpdateCategoriaRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.UpdateCategoriaResponse>}
 *     Promise that resolves to the response
 */
proto.CategoriaServicePromiseClient.prototype.update =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CategoriaService/Update',
      request,
      metadata || {},
      methodDescriptor_CategoriaService_Update);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.DeleteCategoriaRequest,
 *   !proto.DeleteCategoriaResponse>}
 */
const methodDescriptor_CategoriaService_Delete = new grpc.web.MethodDescriptor(
  '/CategoriaService/Delete',
  grpc.web.MethodType.UNARY,
  proto.DeleteCategoriaRequest,
  proto.DeleteCategoriaResponse,
  /**
   * @param {!proto.DeleteCategoriaRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.DeleteCategoriaResponse.deserializeBinary
);


/**
 * @param {!proto.DeleteCategoriaRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.DeleteCategoriaResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.DeleteCategoriaResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CategoriaServiceClient.prototype.delete =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CategoriaService/Delete',
      request,
      metadata || {},
      methodDescriptor_CategoriaService_Delete,
      callback);
};


/**
 * @param {!proto.DeleteCategoriaRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.DeleteCategoriaResponse>}
 *     Promise that resolves to the response
 */
proto.CategoriaServicePromiseClient.prototype.delete =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CategoriaService/Delete',
      request,
      metadata || {},
      methodDescriptor_CategoriaService_Delete);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ListCategoriaRequest,
 *   !proto.ListCategoriaResponse>}
 */
const methodDescriptor_CategoriaService_List = new grpc.web.MethodDescriptor(
  '/CategoriaService/List',
  grpc.web.MethodType.UNARY,
  proto.ListCategoriaRequest,
  proto.ListCategoriaResponse,
  /**
   * @param {!proto.ListCategoriaRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ListCategoriaResponse.deserializeBinary
);


/**
 * @param {!proto.ListCategoriaRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ListCategoriaResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ListCategoriaResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CategoriaServiceClient.prototype.list =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CategoriaService/List',
      request,
      metadata || {},
      methodDescriptor_CategoriaService_List,
      callback);
};


/**
 * @param {!proto.ListCategoriaRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ListCategoriaResponse>}
 *     Promise that resolves to the response
 */
proto.CategoriaServicePromiseClient.prototype.list =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CategoriaService/List',
      request,
      metadata || {},
      methodDescriptor_CategoriaService_List);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.GetCategoriaRequest,
 *   !proto.GetCategoriaResponse>}
 */
const methodDescriptor_CategoriaService_Get = new grpc.web.MethodDescriptor(
  '/CategoriaService/Get',
  grpc.web.MethodType.UNARY,
  proto.GetCategoriaRequest,
  proto.GetCategoriaResponse,
  /**
   * @param {!proto.GetCategoriaRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.GetCategoriaResponse.deserializeBinary
);


/**
 * @param {!proto.GetCategoriaRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.GetCategoriaResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.GetCategoriaResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CategoriaServiceClient.prototype.get =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CategoriaService/Get',
      request,
      metadata || {},
      methodDescriptor_CategoriaService_Get,
      callback);
};


/**
 * @param {!proto.GetCategoriaRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.GetCategoriaResponse>}
 *     Promise that resolves to the response
 */
proto.CategoriaServicePromiseClient.prototype.get =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CategoriaService/Get',
      request,
      metadata || {},
      methodDescriptor_CategoriaService_Get);
};


module.exports = proto;

