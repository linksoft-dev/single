/**
 * @fileoverview gRPC-Web generated client stub for order
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: sales/order/v1/order.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')

var google_api_annotations_pb = require('../../../google/api/annotations_pb.js')

var google_api_resource_pb = require('../../../google/api/resource_pb.js')

var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js')

var plugins_service_service_pb = require('../../../plugins/service/service_pb.js')

var plugins_validate_validate_pb = require('../../../plugins/validate/validate_pb.js')

var filter_filter_pb = require('../../../filter/filter_pb.js')
const proto = {};
proto.order = require('./order_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.order.OrderServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.order.OrderServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.order.CreateOrderRequest,
 *   !proto.order.CreateOrderResponse>}
 */
const methodDescriptor_OrderService_Create = new grpc.web.MethodDescriptor(
  '/order.OrderService/Create',
  grpc.web.MethodType.UNARY,
  proto.order.CreateOrderRequest,
  proto.order.CreateOrderResponse,
  /**
   * @param {!proto.order.CreateOrderRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.order.CreateOrderResponse.deserializeBinary
);


/**
 * @param {!proto.order.CreateOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.order.CreateOrderResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.order.CreateOrderResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.order.OrderServiceClient.prototype.create =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/order.OrderService/Create',
      request,
      metadata || {},
      methodDescriptor_OrderService_Create,
      callback);
};


/**
 * @param {!proto.order.CreateOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.order.CreateOrderResponse>}
 *     Promise that resolves to the response
 */
proto.order.OrderServicePromiseClient.prototype.create =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/order.OrderService/Create',
      request,
      metadata || {},
      methodDescriptor_OrderService_Create);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.order.UpdateOrderRequest,
 *   !proto.order.UpdateOrderResponse>}
 */
const methodDescriptor_OrderService_Update = new grpc.web.MethodDescriptor(
  '/order.OrderService/Update',
  grpc.web.MethodType.UNARY,
  proto.order.UpdateOrderRequest,
  proto.order.UpdateOrderResponse,
  /**
   * @param {!proto.order.UpdateOrderRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.order.UpdateOrderResponse.deserializeBinary
);


/**
 * @param {!proto.order.UpdateOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.order.UpdateOrderResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.order.UpdateOrderResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.order.OrderServiceClient.prototype.update =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/order.OrderService/Update',
      request,
      metadata || {},
      methodDescriptor_OrderService_Update,
      callback);
};


/**
 * @param {!proto.order.UpdateOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.order.UpdateOrderResponse>}
 *     Promise that resolves to the response
 */
proto.order.OrderServicePromiseClient.prototype.update =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/order.OrderService/Update',
      request,
      metadata || {},
      methodDescriptor_OrderService_Update);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.order.DeleteOrderRequest,
 *   !proto.order.DeleteOrderResponse>}
 */
const methodDescriptor_OrderService_Delete = new grpc.web.MethodDescriptor(
  '/order.OrderService/Delete',
  grpc.web.MethodType.UNARY,
  proto.order.DeleteOrderRequest,
  proto.order.DeleteOrderResponse,
  /**
   * @param {!proto.order.DeleteOrderRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.order.DeleteOrderResponse.deserializeBinary
);


/**
 * @param {!proto.order.DeleteOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.order.DeleteOrderResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.order.DeleteOrderResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.order.OrderServiceClient.prototype.delete =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/order.OrderService/Delete',
      request,
      metadata || {},
      methodDescriptor_OrderService_Delete,
      callback);
};


/**
 * @param {!proto.order.DeleteOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.order.DeleteOrderResponse>}
 *     Promise that resolves to the response
 */
proto.order.OrderServicePromiseClient.prototype.delete =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/order.OrderService/Delete',
      request,
      metadata || {},
      methodDescriptor_OrderService_Delete);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.order.ListOrderRequest,
 *   !proto.order.ListOrderResponse>}
 */
const methodDescriptor_OrderService_List = new grpc.web.MethodDescriptor(
  '/order.OrderService/List',
  grpc.web.MethodType.UNARY,
  proto.order.ListOrderRequest,
  proto.order.ListOrderResponse,
  /**
   * @param {!proto.order.ListOrderRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.order.ListOrderResponse.deserializeBinary
);


/**
 * @param {!proto.order.ListOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.order.ListOrderResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.order.ListOrderResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.order.OrderServiceClient.prototype.list =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/order.OrderService/List',
      request,
      metadata || {},
      methodDescriptor_OrderService_List,
      callback);
};


/**
 * @param {!proto.order.ListOrderRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.order.ListOrderResponse>}
 *     Promise that resolves to the response
 */
proto.order.OrderServicePromiseClient.prototype.list =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/order.OrderService/List',
      request,
      metadata || {},
      methodDescriptor_OrderService_List);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.order.CheckoutRequest,
 *   !proto.order.CheckoutResponse>}
 */
const methodDescriptor_OrderService_Checkout = new grpc.web.MethodDescriptor(
  '/order.OrderService/Checkout',
  grpc.web.MethodType.UNARY,
  proto.order.CheckoutRequest,
  proto.order.CheckoutResponse,
  /**
   * @param {!proto.order.CheckoutRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.order.CheckoutResponse.deserializeBinary
);


/**
 * @param {!proto.order.CheckoutRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.order.CheckoutResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.order.CheckoutResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.order.OrderServiceClient.prototype.checkout =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/order.OrderService/Checkout',
      request,
      metadata || {},
      methodDescriptor_OrderService_Checkout,
      callback);
};


/**
 * @param {!proto.order.CheckoutRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.order.CheckoutResponse>}
 *     Promise that resolves to the response
 */
proto.order.OrderServicePromiseClient.prototype.checkout =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/order.OrderService/Checkout',
      request,
      metadata || {},
      methodDescriptor_OrderService_Checkout);
};


module.exports = proto.order;

